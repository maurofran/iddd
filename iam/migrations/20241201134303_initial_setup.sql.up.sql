CREATE SEQUENCE TENANT_SQ START WITH 100 INCREMENT BY 1;

CREATE TABLE TENANT
(
    ID          INTEGER      NOT NULL DEFAULT NEXTVAL('TENANT_SQ'),
    VERSION     INTEGER NOTNULL DEFAULT 0,
    UUID        UUID         NOT NULL,
    NAME        VARCHAR(35)  NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    ENABLED     BOOL         NOT NULL DEFAULT TRUE,
    CREATED_AT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT TENANT_PK PRIMARY KEY (ID),
    CONSTRAINT TENANT_UUID_UK UNIQUE (UUID),
    CONSTRAINT TENANT_NAME_UK UNIQUE (NAME),
);

ALTER SEQUENCE TENANT_SQ OWNED BY TENANT.ID;

CREATE SEQUENCE INVITATION_SQ START WITH 100 INCREMENT BY 1;

CREATE TABLE INVITATION
(
    ID          INTEGER      NOT NULL DEFAULT NEXTVAL('INVITATION_SQ'),
    TENANT_ID   INTEGER      NOT NULL,
    IDENTIFIER  VARCHAR(36)  NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    VALID_FROM  TIMESTAMP,
    UNTIL       TIMESTAMP,
    CONSTRAINT INVITATION_PK PRIMARY KEY (ID),
    CONSTRAINT INVITATION_TENANT_FK FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID) ON DELETE CASCADE,
    CONSTRAINT INVITATION_IDENTIFIER_UK UNIQUE (IDENTIFIER),
);

ALTER SEQUENCE INVITATION_SQ OWNED BY INVITATION.ID;

CREATE SEQUENCE USER_SQ START WITH 100 INCREMENT BY 1;

CREATE TABLE "USER"
(
    ID         INTEGER      NOT NULL DEFAULT NEXTVAL('USER_SQ'),
    VERSION    INTEGER      NOT NULL DEFAULT 0,
    TENANT_ID  INTEGER      NOT NULL,
    USERNAME   VARCHAR(255) NOT NULL,
    PASSWORD   VARCHAR(255) NOT NULL,
    ENABLED    BOOL         NOT NULL DEFAULT TRUE,
    START_DATE TIMESTAMP,
    END_DATE   TIMESTAMP,
    CREATED_AT TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT USER_PK PRIMARY KEY (ID),
    CONSTRAINT USER_TENANT_FK FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID) ON DELETE CASCADE,
    CONSTRAINT USER_TENANT_USERNAME_UK UNIQUE (TENANT_USERNAME)
);

ALTER SEQUENCE USER_SQ OWNED BY "USER".ID;

CREATE TABLE PERSON
(
    ID                  INTEGER      NOT NULL,
    FIRST_NAME          VARCHAR(70)  NOT NULL,
    LAST_NAME           VARCHAR(70)  NOT NULL,
    EMAIL_ADDRESS       VARCHAR(255) NOT NULL,
    STREET_NAME         VARCHAR(150),
    BUILDING_NUMBER     VARCHAR(18),
    POSTAL_CODE         VARCHAR(18),
    CITY                VARCHAR(35),
    STATE_PROVINCE      VARCHAR(10),
    COUNTRY_CODE        CHAR(2),
    PRIMARY_TELEPHONE   VARCHAR(20),
    SECONDARY_TELEPHONE VARCHAR(20),
    CONSTRAINT PRIMARY KEY (ID),
    CONSTRAINT          PERSON_USER_FK (ID) REFERENCES USER (ID) ON DELETE CASCADE
);

CREATE INDEX PERSON_FIRST_NAME_IX ON PERSON (FIRST_NAME);
CREATE INDEX PERSON_LAST_NAME_IX ON PERSON (LAST_NAME);

CREATE SEQUENCE GROUP_SQ START WITH 100 INCREMENT BY 1;

CREATE TABLE "GROUP"
(
    ID          INTEGER     NOT NULL DEFAULT NEXTVAL('GROUP_SQ'),
    VERSION     INTEGER     NOT NULL DEFAULT 0,
    TENANT_ID   INTEGER     NOT NULL,
    NAME        VARCHAR(70) NOT NULL,
    DESCRIPTION VARCHAR(255),
    CREATED_AT  TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT GROUP_PK PRIMARY KEY (ID),
    CONSTRAINT GROUP_TENANT_FK FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID) ON DELETE CASCADE,
    CONSTRAINT GROUP_TENANT_NAME_UK UNIQUE (TENANT_ID, NAME)
);

ALTER SEQUENCE GROUP_SQ OWNED BY "GROUP".ID;

CREATE TYPE GROUP_MEMBER_TYPE AS ENUM ('USER', 'GROUP');

CREATE TABLE GROUP_MEMBER
(
    GROUP_ID INTEGER           NOT NULL,
    "TYPE"   GROUP_MEMBER_TYPE NOT NULL,
    NAME     VARCHAR(255)      NOT NULL,
    CONSTRAINT GROUP_MEMBER_PK PRIMARY KEY (GROUP_ID, "TYPE", NAME),
    CONSTRAINT GROUP_MEMBER_GROUP_FK FOREIGN KEY (GROUP_ID) REFERENCES "GROUP" (ID) ON DELETE CASCADE
);

CREATE SEQUENCE ROLE_SQ START WITH 100 INCREMENT BY 1;

CREATE TABLE "ROLE"
(
    ID               INTEGER     NOT NULL DEFAULT NEXTVAL('ROLE_SQ'),
    VERSION          INTEGER     NOT NULL DEFAULT 0,
    TENANT_ID        INTEGER     NOT NULL,
    NAME             VARCHAR(70) NOT NULL,
    DESCRIPTION      VARCHAR(255),
    SUPPORTS_NESTING BOOL        NOT NULL DEFAULT TRUE,
    GROUP_ID         INTEGER     NOT NULL,
    CREATED_AT       TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT       TIMESTAMP   NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT ROLE_PK PRIMARY KEY (ID),
    CONSTRAINT ROLE_TENANT_FK FOREIGN KEY (TENANT_ID) REFERENCES TENANT (ID) ON DELETE CASCADE,
    CONSTRAINT ROLE_GROUP_FK FOREIGN KEY (GROUP_ID) REFERENCES "GROUP" (ID) ON DELETE CASCADE,
    CONSTRAINT ROLE_TENANT_NAME_UK UNIQUE (TENANT_ID, NAME)
);

ALTER SEQUENCE ROLE_SQ OWNED BY ROLE.ID;